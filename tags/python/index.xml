<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Ioannis Prapas</title>
    <link>https://iprapas.github.io/tags/python/</link>
    <description>Recent content in python on Ioannis Prapas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 21 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://iprapas.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Applied Dimensionality Reduction - learndatasci.com</title>
      <link>https://iprapas.github.io/posts/learndatasci-dim-reduction/</link>
      <pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://iprapas.github.io/posts/learndatasci-dim-reduction/</guid>
      <description>Check my new article - Applied Dimensionality Reduction in learndatasci.com.</description>
    </item>
    
    <item>
      <title>Easiest way to use Python virtual environments</title>
      <link>https://iprapas.github.io/posts/python-virtualenv/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://iprapas.github.io/posts/python-virtualenv/</guid>
      <description>Disclaimer: I know what you are thinking &amp;ldquo;That title is a clickbait&amp;rdquo;. I feel a little bit bad about it. But on second thought, I don&amp;rsquo;t have regrets.
It is the easiest way I know and I dare you to leave a comment if you know a better way.
What are virtual environments Instead of adding new python packages to your system installation, you add them to a virtual installation&amp;rsquo;s site-packages.</description>
    </item>
    
    <item>
      <title>Remote Jupyter notebook locally over ssh gate</title>
      <link>https://iprapas.github.io/posts/remote-jupyter-notebook/</link>
      <pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://iprapas.github.io/posts/remote-jupyter-notebook/</guid>
      <description>Problem I have encountered several times this problem:
 Me: I want a nice interface to run python code in a remote machine.
  Jupyter Notebook: I am here for you.
  SSH Gate: I&amp;rsquo;ll make things trickier.
 Well, here is the guide to setup a jupyter notebook server in a remote machine and connect to it, even if you need to pass through an ssh gate.</description>
    </item>
    
    <item>
      <title>Creating a Recommender System with a Graph DB (Neo4j)</title>
      <link>https://iprapas.github.io/posts/neo4j-recommender/</link>
      <pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://iprapas.github.io/posts/neo4j-recommender/</guid>
      <description>This work is based on a project on the Semantic Data Management course I followed in Barcelona in the summer semester 2018-2019 as part of the BDMA Erasmus Mundus Master program.
It was done in collaboration with my lab mate Elena Ouro. Code available on github.
The problem description The problem is to design and implement a graph database for publishing academic literature. Then, to use an algorithm based on pagerank to suggest reviewers for papers of the database community.</description>
    </item>
    
    <item>
      <title>How I reached top 2% in my first kaggle competition</title>
      <link>https://iprapas.github.io/posts/kaggle-plasticc/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://iprapas.github.io/posts/kaggle-plasticc/</guid>
      <description>Just before the competition, my experience with data science was:
 From online courses, with most notable one the Coursera course on Machine Learning with Andrew NG. Some others included Scalable Machine Learning with Spark, and Computational Thinking and Data Science with Python. From my thesis, which had a limited focus on deep learning.  I lacked, however, any practical experience and although I wanted to join kaggle competitions in the past, I did not really know how to start.</description>
    </item>
    
  </channel>
</rss>